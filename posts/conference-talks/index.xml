<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Conference Talks on DevOps Rob</title><link>https://devops-rob.github.io/posts/conference-talks/</link><description>Recent content in Conference Talks on DevOps Rob</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 25 Mar 2022 08:06:25 +0600</lastBuildDate><atom:link href="https://devops-rob.github.io/posts/conference-talks/index.xml" rel="self" type="application/rss+xml"/><item><title>DevOps Exchange London March 2022</title><link>https://devops-rob.github.io/posts/conference-talks/devops-exchange-london-march-2022/</link><pubDate>Fri, 25 Mar 2022 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/conference-talks/devops-exchange-london-march-2022/</guid><description>Centralising your secrets management platform and Identity Provider is an essential part of adopting a Zero Trust mindset, but one of the biggest challenges facing DevSecOps Engineers and Developers in this new paradigm is how systems and applications can get that initial secret that grants access to the secrets management platform. This is commonly referred to as Secret Zero and can’t be stored in plaintext in the application code due to the high risk of exposure.</description></item><item><title>HashiConf EU 2021: The Zero Trust Mindset</title><link>https://devops-rob.github.io/posts/conference-talks/hashiconf-eu-2021/</link><pubDate>Mon, 30 Aug 2021 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/conference-talks/hashiconf-eu-2021/</guid><description>Learn about how service mesh, identity-based access management, and secrets management can help implement zero trust without increasing development friction.</description></item><item><title>HashiTalks Global 2020: Securing RabbitMQ with Vault</title><link>https://devops-rob.github.io/posts/conference-talks/hashitalks-2020/</link><pubDate>Sat, 22 Feb 2020 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/conference-talks/hashitalks-2020/</guid><description>Learn how to configure a HashiCorp Vault server to help secure access to a RabbitMQ message queue in this talk for HashiTalks conference 2020.
As more software architects move their application designs towards microservice architecture and asynchronous event-driven workflows, the use of message queue systems is ever increasing. RabbitMQ is a popular choice of message queue system which is widely used globally.
Configuring applications to access such a message queue system without compromising its access credentials in the source code is a challenge that can be solved using Hashicorp Vault as a secrets management platform.</description></item><item><title>Kafka Summit EU 2021: Encrypting Kafka messages at rest to secure applications</title><link>https://devops-rob.github.io/posts/conference-talks/kafka-summit-eu-2021/</link><pubDate>Sat, 22 Feb 2020 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/conference-talks/kafka-summit-eu-2021/</guid><description>Whilst Kafka has the ability to encrypt data in transit, it does not have the functionality out of the box to encrypt data at rest. This places the responsibility of encryption of data placed on message queues on developers. Implementing cryptography correctly in our applications is challenging and time consuming.
In this demo-driven talk, I will show you how you can use HashiCorp Vault’s API to implement a simple workflow that offsets the complexity of cryptography to Vault.</description></item></channel></rss>