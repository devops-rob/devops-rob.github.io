<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on DevOps Rob</title><link>https://devops-rob.github.io/posts/</link><description>Recent content in Posts on DevOps Rob</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 25 Mar 2022 08:06:25 +0600</lastBuildDate><atom:link href="https://devops-rob.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>DevOps Exchange London March 2022</title><link>https://devops-rob.github.io/posts/conference-talks/devops-exchange-london-march-2022/</link><pubDate>Fri, 25 Mar 2022 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/conference-talks/devops-exchange-london-march-2022/</guid><description>Centralising your secrets management platform and Identity Provider is an essential part of adopting a Zero Trust mindset, but one of the biggest challenges facing DevSecOps Engineers and Developers in this new paradigm is how systems and applications can get that initial secret that grants access to the secrets management platform. This is commonly referred to as Secret Zero and can’t be stored in plaintext in the application code due to the high risk of exposure.</description></item><item><title>Part 1 | Zero Trust Security (ZTS) with HashiCorp and Azure: Automating Secrets Management</title><link>https://devops-rob.github.io/posts/the-devops-lab-videos/part1-automating-secrets-management/</link><pubDate>Tue, 21 Dec 2021 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/the-devops-lab-videos/part1-automating-secrets-management/</guid><description>In Part 1 of 2 of our HashiCorp series, Rob Barnes from HashiCorp will discuss how you can leverage identity-based AuthN to Vault using Azure Active Directory and learn why centralising identity management at scale is critical to implementing Zero Trust Security (ZTS).</description></item><item><title>Part 2 | Zero Trust Security (ZTS) with HashiCorp and Azure: Automating Secrets Management</title><link>https://devops-rob.github.io/posts/the-devops-lab-videos/part2-automating-secrets-management/</link><pubDate>Tue, 21 Dec 2021 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/the-devops-lab-videos/part2-automating-secrets-management/</guid><description>In Part 2 of 2 of our HashiCorp series, Rob Barnes from HashiCorp is back to discuss why a key component for zero trust security (ZTS) is reducing secrets sprawl for machine-to-machine authorization. Hear from Rob to learn about using dynamic secrets generation for Azure Resources with Vault.</description></item><item><title>Workload authentication to HashiCorp Vault with Azure IMDS and managed identity</title><link>https://devops-rob.github.io/posts/the-devops-lab-videos/workload-authentication/</link><pubDate>Tue, 21 Dec 2021 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/the-devops-lab-videos/workload-authentication/</guid><description>In this episode, Rob Barnes from HashiCorp is back to show practitioners how to enable and configure the Azure auth method in HashiCorp Vault, as well as how applications hosted on Azure VMs can authenticate using a combination of managed identity and the Instance Metadata Service (IMDS).</description></item><item><title>HashiConf EU 2021: The Zero Trust Mindset</title><link>https://devops-rob.github.io/posts/conference-talks/hashiconf-eu-2021/</link><pubDate>Mon, 30 Aug 2021 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/conference-talks/hashiconf-eu-2021/</guid><description>Learn about how service mesh, identity-based access management, and secrets management can help implement zero trust without increasing development friction.</description></item><item><title>HashiTalks Global 2020: Securing RabbitMQ with Vault</title><link>https://devops-rob.github.io/posts/conference-talks/hashitalks-2020/</link><pubDate>Sat, 22 Feb 2020 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/conference-talks/hashitalks-2020/</guid><description>Learn how to configure a HashiCorp Vault server to help secure access to a RabbitMQ message queue in this talk for HashiTalks conference 2020.
As more software architects move their application designs towards microservice architecture and asynchronous event-driven workflows, the use of message queue systems is ever increasing. RabbitMQ is a popular choice of message queue system which is widely used globally.
Configuring applications to access such a message queue system without compromising its access credentials in the source code is a challenge that can be solved using Hashicorp Vault as a secrets management platform.</description></item><item><title>Kafka Summit EU 2021: Encrypting Kafka messages at rest to secure applications</title><link>https://devops-rob.github.io/posts/conference-talks/kafka-summit-eu-2021/</link><pubDate>Sat, 22 Feb 2020 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/conference-talks/kafka-summit-eu-2021/</guid><description>Whilst Kafka has the ability to encrypt data in transit, it does not have the functionality out of the box to encrypt data at rest. This places the responsibility of encryption of data placed on message queues on developers. Implementing cryptography correctly in our applications is challenging and time consuming.
In this demo-driven talk, I will show you how you can use HashiCorp Vault’s API to implement a simple workflow that offsets the complexity of cryptography to Vault.</description></item><item><title>Architecting Vault - Part 4</title><link>https://devops-rob.github.io/posts/vault/architecting-vault-part-4/</link><pubDate>Tue, 06 Aug 2019 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/vault/architecting-vault-part-4/</guid><description>In this blog edition, we’ll look at what Vault’s seal status means, different ways to unseal vault servers and when we can expect to find vault in a sealed state.
Sealing is Vault protective mechanism that prevents you secrets from being accessible if the Vault server is ever compromised in any way. When you first deploy a Vault server, it is in a sealed state, which means, there aren’t many actions you can perform on the server.</description></item><item><title>Architecting Vault - Part 3</title><link>https://devops-rob.github.io/posts/vault/architecting-vault-part-3/</link><pubDate>Mon, 29 Jul 2019 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/vault/architecting-vault-part-3/</guid><description>So far in this blog series, we have covered hosting options for Vault deployments and also explored the different options available for Storage backends and some of the considerations needed when making your design decision.
This post will look at the auth methods that are available for you to enable in your Vault deployment and how to make the right decision as to which option to choose for your use case.</description></item><item><title>Architecting Vault - Part 2</title><link>https://devops-rob.github.io/posts/vault/architecting-vault-part-2/</link><pubDate>Sun, 21 Jul 2019 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/vault/architecting-vault-part-2/</guid><description>In the previous blog post, i discussed hosting options for Hashicorp Vault and things to consider when making decisions about the platform to deploy your production Vault Cluster on to. This post will focus on the next architectural decision that you need to make when designing your vault cluster.
Which backend do i want to use for my Vault Cluster? Firstly, let’s define what a backend is in the context of Vault and what capabilities a backend can enable for our cluster.</description></item><item><title>Architecting Vault - Part 1</title><link>https://devops-rob.github.io/posts/vault/architecting-vault-part-1/</link><pubDate>Sun, 14 Jul 2019 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/vault/architecting-vault-part-1/</guid><description>In the modern world, applications and the infrastructure they run on are moving to a multi-cloud, multi-platform and multi-service approach. This means that applications are being separated into service components that make up an application stack and run on a number of different platforms to deliver the business value, for example, some services may run in a container which is orchestrated by Kubernetes or Nomad, some may be run on Virtual Machines and the others run as Serverless functions using services like Lambda or FunctionApp.</description></item><item><title>What is the future of DevOps</title><link>https://devops-rob.github.io/posts/devops/what-is-the-future-of-devops/</link><pubDate>Mon, 10 Jun 2019 08:06:25 +0600</pubDate><guid>https://devops-rob.github.io/posts/devops/what-is-the-future-of-devops/</guid><description>The way business is conducted, marketing campaigns executed, and sales are concluded have all changed. Whereas the focus used to be on the product and the marketing around it, we are now in a world of experience and convenience. Consumers are now paying for experience and convenience above most things. This evolution can be seen with examples like Air bnb, the world’s largest hotel chain that doesn’t own a single hotel.</description></item></channel></rss>